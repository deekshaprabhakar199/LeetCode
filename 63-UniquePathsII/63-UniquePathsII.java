                }
                    
                    dp[i][j]=0; 
                if(obstacleGrid[i][j] == 1) {
                }
                    continue;
                    dp[0][0] = (obstacleGrid[0][0] == 1) ? 0 : 1;
                if( i==0 && j==0){ 
            for( int j=0; j<n; j++){
        for( int i=0; i< m; i++){

        int[][] dp = new int[m][n];
                else{
                    int up=0, left =0;
                    if( i>0) up = dp[i-1][j];
                    if( j>0) left =  dp[i][j-1];
[
